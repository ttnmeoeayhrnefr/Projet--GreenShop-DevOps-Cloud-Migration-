---
- name: Update web directory
  hosts: web
  become: yes
  tasks:
    - name: Create temporary directory on control node for www
      delegate_to: localhost
      become: no
      file:
        path: /tmp/www_transfer
        state: directory
      register: temp_dir_www
    
    - name: Create temporary directory on control node for apache2
      delegate_to: localhost
      become: no
      file:
        path: /tmp/apache2_transfer
        state: directory
      register: temp_dir_apache2

    - name: Create archive of www content
      delegate_to: localhost
      become: no
      archive:
        path: ../docs/www/*
        dest: "{{ temp_dir_www.path }}/www.zip"
        format: zip
      register: archive_file_www
    
    - name: Create archive of apache2 content
      delegate_to: localhost
      become: no
      archive:
        path: ../docs/apache2/*
        dest: "{{ temp_dir_apache2.path }}/apache2.zip"
        format: zip
      register: archive_file_apache2

    - name: Ensure /var/www directory exists
      file:
        path: /var/www
        state: directory
        mode: '0755'
    
    - name: Ensure /etc/apache2 directory exists
      file:
        path: /etc/apache2
        state: directory
        mode: '0755'

    - name: Transfer www archive to target
      copy:
        src: "{{ archive_file_www.dest }}"
        dest: /tmp/www.zip
    
    - name: Transfer apache2 archive to target
      copy:
        src: "{{ archive_file_apache2.dest }}"
        dest: /tmp/apache2.zip

    - name: Clean existing www content while preserving directory
      find:
        paths: /var/www
        recurse: yes
        file_type: any
      register: found_files_www
    
    - name: Clean existing apache2 content while preserving directory
      find:
        paths: /etc/apache2
        recurse: yes
        file_type: any
      register: found_files_apache2

    - name: Remove www found files
      file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ found_files_www.files }}"
      when: found_files_www.matched > 0
    
    - name: Clean existing content
      shell: "find /etc/apache2 -mindepth 1 -delete"
      args:
        executable: /bin/bash

    - name: Extract www archive to target
      unarchive:
        src: /tmp/www.zip
        dest: /var/www/
        remote_src: yes
    
    - name: Extract apache2 archive to target
      unarchive:
        src: /tmp/apache2.zip
        dest: /etc/apache2/
        remote_src: yes

    - name: Set proper permissions on www extracted files
      file:
        path: /var/www
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'
        recurse: yes
    
    - name: Set proper permissions on apache2 extracted files
      file:
        path: /etc/apache2
        state: directory
        owner: root
        group: root
        mode: '0755'
        recurse: yes

    - name: Remove www temporary files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/www.zip
    
    - name: Remove apache2 temporary files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/apache2.zip

    - name: Clean up www temporary directory
      delegate_to: localhost
      become: no
      file:
        path: "{{ temp_dir_www.path }}"
        state: absent
    
    - name: Clean up apache2 temporary directory
      delegate_to: localhost
      become: no
      file:
        path: "{{ temp_dir_apache2.path }}"
        state: absent

- name: Configure GreenShop Database
  hosts: db1
  become: yes
  tasks:
    - name: Create temporary directory on control node
      delegate_to: localhost
      become: no
      file:
        path: /tmp/db_transfer
        state: directory
      register: temp_dir

    - name: Create archive of database
      delegate_to: localhost
      become: no
      archive:
        path: ../docs/greenshop_bdd.sql
        dest: "{{ temp_dir.path }}/db.zip"
        format: zip
      register: archive_file

    - name: Transfer archive to target
      copy:
        src: "{{ archive_file.dest }}"
        dest: /tmp/db.zip

    - name: Extract archive to target
      unarchive:
        src: /tmp/db.zip
        dest: /tmp
        remote_src: yes

    - name: Install Python MySQL dependencies
      package:
        name: python3-pymysql
        state: present

    - name: Import MySQL dump using direct command
      command: >
        mysql -u root --execute="SOURCE /tmp/greenshop_bdd.sql" greenshop
      register: import_result

    - name: Remove temporary files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/db.zip
        - /tmp/greenshop_bdd.sql

    - name: Clean up temporary directory
      delegate_to: localhost
      become: no
      file:
        path: "{{ temp_dir.path }}"
        state: absent